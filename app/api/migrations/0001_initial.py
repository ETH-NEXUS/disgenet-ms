# Generated by Django 3.2 on 2022-06-10 18:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DiseaseAttributes',
            fields=[
                ('diseasenid', models.IntegerField(db_column='diseaseNID', primary_key=True, serialize=False)),
                ('diseaseid', models.CharField(db_column='diseaseId', max_length=255)),
                ('diseasename', models.CharField(db_column='diseaseName', max_length=255)),
                ('type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'diseaseAttributes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiseaseClass',
            fields=[
                ('diseaseclassnid', models.TextField(db_column='diseaseClassNID', primary_key=True, serialize=False)),
                ('vocabulary', models.CharField(max_length=255)),
                ('diseaseclass', models.CharField(db_column='diseaseClass', max_length=255)),
                ('diseaseclassname', models.CharField(db_column='diseaseClassName', max_length=255)),
            ],
            options={
                'db_table': 'diseaseClass',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneAttributes',
            fields=[
                ('genenid', models.IntegerField(db_column='geneNID', primary_key=True, serialize=False)),
                ('geneid', models.IntegerField(blank=True, db_column='geneId', null=True)),
                ('genename', models.CharField(blank=True, db_column='geneName', max_length=255, null=True)),
                ('genedescription', models.CharField(blank=True, db_column='geneDescription', max_length=255, null=True)),
                ('pli', models.TextField(blank=True, db_column='pLI', null=True)),
                ('dsi', models.TextField(blank=True, db_column='DSI', null=True)),
                ('dpi', models.TextField(blank=True, db_column='DPI', null=True)),
            ],
            options={
                'db_table': 'geneAttributes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VariantAttributes',
            fields=[
                ('variantnid', models.IntegerField(db_column='variantNID', primary_key=True, serialize=False)),
                ('variantid', models.CharField(db_column='variantId', max_length=255)),
                ('s', models.TextField(blank=True, null=True)),
                ('chromosome', models.CharField(blank=True, max_length=255, null=True)),
                ('coord', models.CharField(blank=True, max_length=255, null=True)),
                ('most_severe_consequence', models.CharField(blank=True, max_length=255, null=True)),
                ('dsi', models.TextField(blank=True, db_column='DSI', null=True)),
                ('dpi', models.TextField(blank=True, db_column='DPI', null=True)),
            ],
            options={
                'db_table': 'variantAttributes',
            },
        ),
        migrations.CreateModel(
            name='Disease2Class',
            fields=[
                ('diseasenid', models.ForeignKey(db_column='diseaseNID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.diseaseattributes')),
            ],
            options={
                'db_table': 'disease2class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VariantDiseaseNetwork',
            fields=[
                ('nid', models.IntegerField(db_column='NID', primary_key=True, serialize=False)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('association', models.TextField(blank=True, null=True)),
                ('associationtype', models.TextField(blank=True, db_column='associationType', null=True)),
                ('sentence', models.TextField(blank=True, null=True)),
                ('pmid', models.TextField(blank=True, null=True)),
                ('score', models.TextField(blank=True, null=True)),
                ('ei', models.TextField(blank=True, db_column='EI', null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('diseasenid', models.ForeignKey(db_column='diseaseNID', on_delete=django.db.models.deletion.DO_NOTHING, to='api.diseaseattributes')),
                ('variantnid', models.ForeignKey(db_column='variantNID', on_delete=django.db.models.deletion.DO_NOTHING, to='api.variantattributes')),
            ],
            options={
                'db_table': 'variantDiseaseNetwork',
            },
        ),
        migrations.CreateModel(
            name='GeneDiseaseNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nid', models.IntegerField(db_column='NID')),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('association', models.TextField(blank=True, null=True)),
                ('associationtype', models.TextField(blank=True, db_column='associationType', null=True)),
                ('sentence', models.TextField(blank=True, null=True)),
                ('pmid', models.IntegerField(blank=True, null=True)),
                ('score', models.TextField(blank=True, null=True)),
                ('el', models.CharField(blank=True, db_column='EL', max_length=255, null=True)),
                ('ei', models.TextField(blank=True, db_column='EI', null=True)),
                ('year', models.TextField(blank=True, null=True)),
                ('diseasenid', models.ForeignKey(db_column='diseaseNID', on_delete=django.db.models.deletion.DO_NOTHING, to='api.diseaseattributes')),
                ('genenid', models.ForeignKey(db_column='geneNID', on_delete=django.db.models.deletion.DO_NOTHING, to='api.geneattributes')),
            ],
            options={
                'db_table': 'geneDiseaseNetwork',
            },
        ),
        migrations.CreateModel(
            name='VariantGene',
            fields=[
                ('variantnid', models.ForeignKey(db_column='variantNID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.variantattributes')),
                ('genenid', models.ForeignKey(db_column='geneNID', on_delete=django.db.models.deletion.DO_NOTHING, to='api.geneattributes')),
            ],
            options={
                'db_table': 'variantGene',
            },
        ),
    ]
